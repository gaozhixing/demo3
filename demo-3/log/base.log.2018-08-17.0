2018-08-17 00:00:42,018 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:00:42,020 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:00:42,022 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:00:42,023 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:00:42,023 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:00:42,024 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:00:42,024 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:00:42,025 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:00:42,026 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:00:42,032 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:00:42,033 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:01:35,308 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:01:35,309 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:01:35,309 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:01:35,309 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:01:35,309 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:01:35,310 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:01:35,310 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:01:35,311 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:01:35,311 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:01:35,311 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:01:35,311 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:07:13,964 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:07:13,964 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:07:13,964 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:07:13,964 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:07:13,965 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:07:13,965 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:07:13,965 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:07:13,966 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:07:13,967 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:07:13,967 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:07:13,967 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:08:58,965 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:08:58,966 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:08:58,966 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:08:58,966 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:08:58,966 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:08:58,967 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:08:58,967 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:08:58,968 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:08:58,969 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:08:58,969 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:08:58,970 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:09:22,256 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:09:22,256 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:09:22,256 INFO (HttpAspect.java:50)- id=192.168.137.205
2018-08-17 00:09:22,257 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:09:22,257 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:09:22,257 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:09:22,257 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:09:22,258 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:09:22,258 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:09:22,258 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:09:22,259 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:09:56,505 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:09:56,506 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:09:56,506 INFO (HttpAspect.java:50)- id=192.168.137.205
2018-08-17 00:09:56,506 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:09:56,506 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:09:56,507 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:09:56,507 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:09:56,508 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:09:56,509 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:09:56,509 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:09:56,509 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:12:47,116 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:12:47,117 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:12:47,117 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:12:47,117 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:12:47,117 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:12:47,118 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:12:47,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:12:47,118 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:12:47,119 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:12:47,119 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:12:47,119 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:13:31,757 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:13:31,757 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:13:31,757 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:13:31,757 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:13:31,758 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:13:31,758 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:13:31,758 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:13:31,759 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:13:31,759 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:13:31,760 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:13:31,760 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:16:00,793 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:16:00,793 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:16:00,794 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:16:00,794 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:16:00,794 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:16:00,794 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:16:00,795 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:16:00,796 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:16:00,796 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:16:00,796 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:16:00,797 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:16:25,384 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:16:25,385 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:16:25,385 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:16:25,385 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:16:25,385 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:16:25,386 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:16:25,386 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:16:25,387 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:16:25,387 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:16:25,388 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:16:25,388 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:19:20,657 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:19:20,657 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:19:20,658 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:19:20,658 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:19:20,658 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:19:20,659 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:19:20,659 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:19:20,660 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:19:20,660 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:19:20,661 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:19:20,661 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:19:46,723 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:19:46,724 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:19:46,724 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:19:46,724 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:19:46,724 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:19:46,724 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:19:46,725 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:19:46,726 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:19:46,726 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:19:46,726 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:19:46,726 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:20:14,561 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:20:14,561 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:20:14,561 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:20:14,562 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:14,562 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:20:14,562 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:20:14,562 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:20:14,563 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:20:14,563 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:14,564 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:20:14,564 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:20:29,881 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:20:29,881 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:20:29,881 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:20:29,881 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:29,882 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:20:29,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:20:29,882 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:20:29,883 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:20:29,883 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:29,883 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:20:29,884 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:20:46,752 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:20:46,752 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:20:46,752 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:20:46,753 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:46,753 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:20:46,754 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:20:46,754 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:20:46,754 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:20:46,755 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:20:46,755 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:20:46,755 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:21:13,571 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:21:13,571 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:21:13,571 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:21:13,572 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:13,572 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:21:13,572 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:21:13,573 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:21:13,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:21:13,574 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:13,574 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:21:13,575 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:21:23,571 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:21:23,571 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:21:23,571 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:21:23,572 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:23,572 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:21:23,572 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:21:23,573 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:21:23,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:21:23,574 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:23,574 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:21:23,574 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:21:32,856 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:21:32,856 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:21:32,856 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:21:32,857 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:32,857 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:21:32,857 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:21:32,858 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:21:32,859 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:21:32,859 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:21:32,859 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:21:32,860 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:23:42,313 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:23:42,314 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:23:42,314 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:23:42,315 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:23:42,315 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:23:42,316 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:23:42,316 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:23:42,317 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:23:42,317 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:23:42,318 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:23:42,318 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:24:05,573 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:24:05,573 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:24:05,573 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:24:05,574 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:24:05,574 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:24:05,574 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:24:05,575 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:24:05,576 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:24:05,576 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:24:05,577 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:24:05,577 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:24:52,338 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:24:52,339 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:24:52,339 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:24:52,339 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:24:52,339 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:24:52,339 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:24:52,340 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:24:52,340 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:24:52,341 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:24:52,341 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:24:52,341 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:25:41,058 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:25:41,059 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:25:41,059 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:25:41,059 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:25:41,059 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:25:41,060 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:25:41,060 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:25:41,061 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:25:41,061 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:25:41,062 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:25:41,062 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:25:57,216 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:25:57,216 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:25:57,217 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:25:57,217 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:25:57,217 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:25:57,217 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:25:57,218 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:25:57,218 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:25:57,219 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:25:57,219 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:25:57,219 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 00:26:24,130 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 00:26:24,130 INFO (HttpAspect.java:48)- method=GET
2018-08-17 00:26:24,130 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 00:26:24,131 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:26:24,131 INFO (HttpAspect.java:54)- args=008
2018-08-17 00:26:24,131 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 00:26:24,131 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 00:26:24,132 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 00:26:24,132 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 00:26:24,132 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 00:26:24,133 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:29:39,897 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 7140 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 08:29:39,900 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 08:29:39,900 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 08:29:44,219 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.668 seconds (JVM running for 5.302)
2018-08-17 08:32:51,717 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:32:51,718 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:32:51,718 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:32:51,720 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:32:51,721 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:32:52,215 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:32:52,253 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:32:52,279 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:32:52,282 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:32:52,282 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:32:52,406 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"180","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:33:47,933 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:33:47,933 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:33:47,933 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:33:47,934 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:33:47,934 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:33:47,935 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:33:47,936 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:33:47,937 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 08:33:47,939 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:33:47,939 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:33:47,940 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 08:34:04,787 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:34:04,787 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:34:04,788 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:34:04,788 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:34:04,789 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:34:04,789 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:34:04,790 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:34:04,791 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 08:34:04,792 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:34:04,792 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:34:04,793 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 08:35:02,666 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:35:02,667 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:35:02,667 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:35:02,667 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:35:02,668 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:35:02,668 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:35:02,669 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:35:02,670 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 08:35:02,671 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:35:02,671 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:35:02,671 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 08:35:20,986 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/create
2018-08-17 08:35:20,993 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:35:20,993 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:35:20,993 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 08:35:21,002 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@24438a51
2018-08-17 08:35:21,004 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 08:35:21,005 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), woman(String), 175(String), 60(String)
2018-08-17 08:35:21,013 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:35:21,015 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,createUser
2018-08-17 08:35:21,015 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@24438a51
2018-08-17 08:35:21,015 INFO (HttpAspect.java:84)- 返回结果response={"data":"008","resultCode":"000","resultMsg":"success"}
2018-08-17 08:35:21,061 INFO (RedisClient.java:24)- 缓存录入key=user:008,value={"height":"175","id":"008","sex":"woman","weight":"60"}
2018-08-17 08:35:29,230 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:35:29,231 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:35:29,237 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:35:29,237 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:35:29,237 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:35:29,237 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:35:29,238 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:35:29,238 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:35:29,239 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:35:29,240 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:35:29,241 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:35:29,241 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:35:29,242 INFO (HttpAspect.java:84)- 返回结果response={"data":{"height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:35:31,389 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:35:31,391 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:35:31,391 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:35:31,392 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:35:31,392 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:35:31,392 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@12530621
2018-08-17 08:35:31,393 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:35:31,396 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:35:31,404 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:35:31,405 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:35:31,405 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@12530621
2018-08-17 08:35:31,406 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:37:30,654 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:37:30,654 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:37:30,655 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:37:30,656 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:37:30,656 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:37:30,661 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:37:30,662 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:37:30,664 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:37:30,665 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:37:30,665 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:37:30,665 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:37:40,425 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:37:40,425 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:37:40,430 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:37:40,431 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:37:40,431 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:37:40,432 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:37:40,432 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:37:40,432 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:37:40,433 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:37:40,435 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:37:40,435 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:37:40,436 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:37:40,436 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:37:42,219 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:37:42,220 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:37:42,221 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:37:42,221 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:37:42,221 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:37:42,222 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@58e31002
2018-08-17 08:37:42,222 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:37:42,223 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:37:42,232 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:37:42,232 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:37:42,232 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@58e31002
2018-08-17 08:37:42,233 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:38:30,128 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:38:30,128 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:38:30,129 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:38:30,129 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:38:30,129 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:38:30,130 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:38:30,131 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:38:30,133 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:38:30,134 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:38:30,134 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:38:30,134 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:38:40,192 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:38:40,192 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:38:40,204 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:38:40,204 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:38:40,205 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:38:40,205 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:38:40,205 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:38:40,206 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:38:40,206 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:38:40,207 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:38:40,208 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:38:40,208 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:38:40,209 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:38:41,921 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:38:41,922 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:38:41,922 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:38:41,922 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:38:41,923 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:38:41,923 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@6572286c
2018-08-17 08:38:41,924 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:38:41,925 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:38:41,933 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:38:41,934 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:38:41,934 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@6572286c
2018-08-17 08:38:41,935 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:39:54,992 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:39:54,993 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:39:54,993 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:39:54,994 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:39:54,994 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:39:54,995 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:39:54,996 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:39:54,997 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:39:54,999 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:39:54,999 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:39:54,999 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:40:02,543 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:40:02,543 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:40:02,547 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:40:02,548 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:40:02,548 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:40:02,548 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:40:02,549 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:40:02,549 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:40:02,550 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:40:02,551 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:40:02,552 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:40:02,552 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:40:02,552 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:40:04,384 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:40:04,386 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:40:04,386 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:40:04,387 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:40:04,387 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:40:04,387 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@435bb36e
2018-08-17 08:40:04,389 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:40:04,391 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:40:04,402 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:40:04,403 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:40:04,404 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@435bb36e
2018-08-17 08:40:04,404 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:41:23,042 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:41:23,043 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:41:23,043 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:41:23,044 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:41:23,044 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:41:23,045 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:41:23,045 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:41:23,046 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 08:41:23,047 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:41:23,048 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:41:23,048 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 08:41:30,004 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/create
2018-08-17 08:41:30,004 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:41:30,005 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:41:30,005 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 08:41:30,005 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@18cb454a
2018-08-17 08:41:30,006 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 08:41:30,006 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), woman(String), (String), (String)
2018-08-17 08:41:30,014 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:41:30,014 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,createUser
2018-08-17 08:41:30,014 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@18cb454a
2018-08-17 08:41:30,015 INFO (HttpAspect.java:84)- 返回结果response={"data":"008","resultCode":"000","resultMsg":"success"}
2018-08-17 08:41:30,017 INFO (RedisClient.java:24)- 缓存录入key=user:008,value={"height":"","id":"008","sex":"woman","weight":""}
2018-08-17 08:41:35,382 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:41:35,383 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:41:35,393 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:41:35,393 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:41:35,393 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:41:35,394 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:41:35,394 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:41:35,394 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:41:35,395 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:41:35,396 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:41:35,397 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:41:35,397 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:41:35,397 INFO (HttpAspect.java:84)- 返回结果response={"data":{"height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:41:37,210 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:41:37,211 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:41:37,211 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:41:37,212 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:41:37,212 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:41:37,212 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@41adc4bd
2018-08-17 08:41:37,213 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:41:37,214 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), (String), (String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:41:37,217 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:41:37,217 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:41:37,218 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@41adc4bd
2018-08-17 08:41:37,218 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:42:44,378 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:42:44,378 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:42:44,379 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:42:44,379 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:42:44,379 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:42:44,380 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:42:44,381 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:42:44,382 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:42:44,383 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:42:44,383 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:42:44,384 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:42:51,899 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:42:51,900 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:42:51,904 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:42:51,904 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:42:51,904 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:42:51,904 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:42:51,905 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:42:51,905 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:42:51,906 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:42:51,907 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:42:51,907 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:42:51,908 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:42:51,908 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:42:53,716 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:42:53,717 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:42:53,718 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:42:53,718 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:42:53,719 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:42:53,719 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@35ffa8a5
2018-08-17 08:42:53,719 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:42:53,721 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), (String), (String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:42:53,730 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:42:53,730 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:42:53,731 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@35ffa8a5
2018-08-17 08:42:53,731 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:43:46,613 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:43:46,614 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:43:46,614 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:43:46,614 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:43:46,614 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:43:46,615 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:43:46,616 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:43:46,618 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:43:46,619 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:43:46,619 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:43:46,619 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:43:53,660 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:43:53,660 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:43:53,672 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:43:53,672 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:43:53,673 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:43:53,673 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:43:53,673 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:43:53,674 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:43:53,674 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:43:53,675 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:43:53,676 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:43:53,676 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:43:53,676 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:43:55,517 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:43:55,518 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:43:55,518 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:43:55,519 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:43:55,519 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:43:55,519 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@44ac43f8
2018-08-17 08:43:55,520 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:43:55,520 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), (String), (String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:43:55,529 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:43:55,530 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:43:55,530 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@44ac43f8
2018-08-17 08:43:55,531 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:45:38,624 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:45:38,625 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:45:38,625 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:45:38,626 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:45:38,626 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:45:38,627 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:45:38,627 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:45:38,629 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:45:38,629 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:45:38,630 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:45:38,630 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:45:46,388 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:45:46,388 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:45:46,392 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:45:46,392 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:45:46,393 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:45:46,393 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:45:46,393 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:45:46,394 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:45:46,394 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:45:46,395 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:45:46,396 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:45:46,396 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:45:46,396 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:45:48,229 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:45:48,230 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:45:48,231 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:45:48,231 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:45:48,232 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:45:48,232 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@76e1998e
2018-08-17 08:45:48,233 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:45:48,234 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), (String), (String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:45:48,242 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:45:48,243 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:45:48,243 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@76e1998e
2018-08-17 08:45:48,243 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:46:27,273 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:46:27,274 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:46:27,274 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:46:27,274 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:46:27,274 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:46:27,275 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:46:27,275 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:46:27,277 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:46:27,278 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:46:27,278 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:46:27,278 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:46:35,940 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:46:35,940 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:46:35,949 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:46:35,950 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:46:35,950 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:46:35,950 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:46:35,950 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:46:35,951 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:46:35,952 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:46:35,952 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:46:35,953 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:46:35,953 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:46:35,953 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"","id":"008","sex":"woman","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:46:37,764 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:46:37,765 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:46:37,766 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:46:37,766 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:46:37,766 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:46:37,767 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@5a86e935
2018-08-17 08:46:37,767 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:46:37,768 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), (String), (String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:46:37,776 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:46:37,777 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:46:37,777 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@5a86e935
2018-08-17 08:46:37,778 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:47:58,298 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:47:58,299 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:47:58,299 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:47:58,299 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:47:58,299 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:47:58,300 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:47:58,301 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:47:58,302 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 08:47:58,302 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:47:58,302 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:47:58,302 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 08:48:08,895 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/create
2018-08-17 08:48:08,900 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:48:08,901 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:48:08,901 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 08:48:08,901 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@5692d0e6
2018-08-17 08:48:08,902 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 08:48:08,902 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), woman(String), 175(String), 60(String)
2018-08-17 08:48:08,910 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:48:08,911 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,createUser
2018-08-17 08:48:08,911 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@5692d0e6
2018-08-17 08:48:08,911 INFO (HttpAspect.java:84)- 返回结果response={"data":"008","resultCode":"000","resultMsg":"success"}
2018-08-17 08:48:08,912 INFO (RedisClient.java:24)- 缓存录入key=user:008,value={"height":"175","id":"008","sex":"woman","weight":"60"}
2018-08-17 08:48:12,935 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:48:12,936 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:48:12,940 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:48:12,940 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:48:12,941 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:48:12,941 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:48:12,941 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:48:12,941 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:48:12,942 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:48:12,943 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:48:12,943 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:48:12,943 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:48:12,944 INFO (HttpAspect.java:84)- 返回结果response={"data":{"height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:48:14,742 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:48:14,743 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:48:14,744 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:48:14,744 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:48:14,744 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:48:14,745 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@1ace9507
2018-08-17 08:48:14,745 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:48:14,747 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:48:14,750 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:48:14,751 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:48:14,751 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@1ace9507
2018-08-17 08:48:14,752 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:49:18,650 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:49:18,650 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:49:18,650 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:49:18,651 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:49:18,651 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:49:18,652 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:49:18,652 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:49:18,655 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:49:18,655 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:49:18,655 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:49:18,656 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:49:31,716 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:49:31,717 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:49:31,720 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:49:31,721 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:49:31,721 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:49:31,721 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:49:31,721 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:49:31,722 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:49:31,722 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:49:31,724 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:49:31,725 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:49:31,725 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:49:31,725 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:49:33,506 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:49:33,507 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:49:33,507 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:49:33,508 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:49:33,508 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:49:33,508 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@58cd47c6
2018-08-17 08:49:33,509 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:49:33,509 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:49:33,518 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:49:33,519 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:49:33,519 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@58cd47c6
2018-08-17 08:49:33,520 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:50:12,329 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:50:12,329 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:50:12,329 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:50:12,330 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:50:12,330 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:50:12,330 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:50:12,331 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:50:12,332 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:50:12,332 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:50:12,332 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:50:12,332 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:50:20,226 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:50:20,227 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:50:20,231 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:50:20,231 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:50:20,231 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:50:20,231 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:50:20,231 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:50:20,232 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:50:20,232 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:50:20,233 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:50:20,234 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:50:20,234 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:50:20,234 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:50:22,022 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:50:22,023 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:50:22,023 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:50:22,024 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:50:22,024 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:50:22,024 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@172f4c6c
2018-08-17 08:50:22,025 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:50:22,026 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:50:22,031 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:50:22,032 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:50:22,032 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@172f4c6c
2018-08-17 08:50:22,033 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:54:07,885 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:54:07,886 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:54:07,886 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:54:07,886 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:07,887 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:54:07,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:54:07,888 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:54:07,889 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:54:07,890 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:07,890 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:54:07,890 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:54:15,211 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:54:15,212 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:54:15,216 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:54:15,216 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:54:15,217 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:54:15,217 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:15,217 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:54:15,217 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:54:15,218 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:54:15,218 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:54:15,219 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:15,219 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:54:15,219 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:54:17,012 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:54:17,013 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:54:17,013 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:54:17,013 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:54:17,013 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:54:17,014 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@3c1694d0
2018-08-17 08:54:17,015 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:54:17,016 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:54:17,025 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:54:17,025 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:54:17,026 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@3c1694d0
2018-08-17 08:54:17,026 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:54:59,411 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:54:59,412 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:54:59,412 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:54:59,412 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:59,412 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:54:59,413 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:54:59,413 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:54:59,414 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:54:59,415 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:54:59,415 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:54:59,415 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:55:06,481 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:55:06,481 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:55:06,496 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:55:06,496 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:55:06,496 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:55:06,497 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:55:06,497 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:55:06,497 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:55:06,498 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:55:06,498 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:55:06,499 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:55:06,499 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:55:06,499 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:55:08,242 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:55:08,243 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:55:08,244 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:55:08,244 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:55:08,245 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:55:08,245 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@414bcebb
2018-08-17 08:55:08,246 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:55:08,246 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:55:08,254 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:55:08,255 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:55:08,255 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@414bcebb
2018-08-17 08:55:08,256 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:56:15,592 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:56:15,593 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:56:15,593 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:56:15,593 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:15,594 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:56:15,594 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:56:15,595 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:56:15,596 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:56:15,596 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:15,596 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:56:15,597 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:56:24,247 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:56:24,248 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:56:24,251 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:56:24,251 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:56:24,251 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:56:24,251 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:24,252 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:56:24,252 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:56:24,252 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:56:24,253 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:56:24,254 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:24,254 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:56:24,254 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:56:26,046 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:56:26,047 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:56:26,047 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:56:26,048 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:56:26,048 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:56:26,048 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@456d7cc2
2018-08-17 08:56:26,049 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:56:26,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:56:26,058 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:56:26,059 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:56:26,059 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@456d7cc2
2018-08-17 08:56:26,059 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:56:56,186 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:56:56,186 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:56:56,186 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:56:56,187 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:56,187 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:56:56,187 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:56:56,188 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:56:56,188 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:56:56,189 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:56:56,189 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:56:56,189 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:57:04,337 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:57:04,337 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:57:04,342 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:57:04,342 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:57:04,342 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:57:04,342 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:57:04,342 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:57:04,343 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:57:04,344 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:57:04,344 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:57:04,345 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:57:04,345 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:57:04,345 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:57:05,929 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:57:05,930 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:57:05,930 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:57:05,931 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:57:05,931 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:57:05,931 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@1e94defd
2018-08-17 08:57:05,932 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:57:05,933 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:57:05,942 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:57:05,942 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:57:05,942 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@1e94defd
2018-08-17 08:57:05,943 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 08:59:20,057 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:59:20,057 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:59:20,057 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:59:20,058 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:20,058 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:59:20,058 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:59:20,059 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:59:20,062 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:59:20,062 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:20,063 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:59:20,063 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:59:28,010 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 08:59:28,011 INFO (HttpAspect.java:48)- method=GET
2018-08-17 08:59:28,011 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:59:28,011 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:28,012 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:59:28,012 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:59:28,012 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:59:28,013 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:59:28,014 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:28,014 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:59:28,014 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:59:36,852 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 08:59:36,853 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 08:59:36,857 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:59:36,857 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:59:36,858 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:59:36,858 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:36,858 INFO (HttpAspect.java:54)- args=008
2018-08-17 08:59:36,858 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 08:59:36,859 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 08:59:36,859 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 08:59:36,860 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 08:59:36,860 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 08:59:36,860 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 08:59:38,629 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 08:59:38,630 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 08:59:38,630 INFO (HttpAspect.java:48)- method=POST
2018-08-17 08:59:38,630 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 08:59:38,631 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:59:38,631 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@424c6d54
2018-08-17 08:59:38,631 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 08:59:38,632 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 08:59:38,642 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 08:59:38,642 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 08:59:38,643 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@424c6d54
2018-08-17 08:59:38,643 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:00:30,193 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:00:30,193 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:00:30,193 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:00:30,193 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:00:30,194 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:00:30,194 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:00:30,194 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:00:30,195 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:00:30,196 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:00:30,197 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:00:30,197 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:00:37,253 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:00:37,253 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:00:37,258 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:00:37,258 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:00:37,258 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:00:37,259 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:00:37,259 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:00:37,259 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:00:37,260 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:00:37,261 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:00:37,262 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:00:37,262 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:00:37,262 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:00:39,067 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:00:39,068 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:00:39,069 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:00:39,069 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:00:39,069 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:00:39,070 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@62fa2fce
2018-08-17 09:00:39,070 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:00:39,070 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:00:39,079 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:00:39,080 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:00:39,080 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@62fa2fce
2018-08-17 09:00:39,080 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:02:51,768 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:02:51,768 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:02:51,769 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:02:51,769 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:02:51,769 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:02:51,770 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:02:51,771 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:02:51,771 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:02:51,772 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:02:51,772 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:02:51,772 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:03:06,431 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:03:06,431 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:03:06,436 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:03:06,436 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:03:06,436 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:03:06,436 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:06,436 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:03:06,437 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:03:06,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:03:06,438 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:03:06,438 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:06,439 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:03:06,439 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:03:07,960 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:03:07,961 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:03:07,961 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:03:07,962 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:03:07,962 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:03:07,962 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@670dcd45
2018-08-17 09:03:07,963 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:03:07,964 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:03:07,972 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:03:07,973 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:03:07,974 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@670dcd45
2018-08-17 09:03:07,974 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:03:37,947 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:03:37,947 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:03:37,948 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:03:37,948 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:37,948 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:03:37,949 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:03:37,949 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:03:37,950 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:03:37,951 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:37,952 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:03:37,952 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:03:46,253 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:03:46,253 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:03:46,258 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:03:46,259 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:03:46,259 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:03:46,259 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:46,259 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:03:46,260 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:03:46,260 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:03:46,261 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:03:46,261 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:03:46,262 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:03:46,262 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:03:47,836 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:03:47,837 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:03:47,837 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:03:47,837 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:03:47,838 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:03:47,838 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@50ad0bc7
2018-08-17 09:03:47,839 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:03:47,839 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:03:47,849 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:03:47,849 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:03:47,849 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@50ad0bc7
2018-08-17 09:03:47,850 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:04:47,778 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:04:47,779 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:04:47,779 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:04:47,779 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:04:47,780 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:04:47,780 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:04:47,781 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:04:47,781 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:04:47,782 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:04:47,782 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:04:47,782 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:04:56,140 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:04:56,141 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:04:56,147 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:04:56,148 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:04:56,148 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:04:56,148 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:04:56,148 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:04:56,149 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:04:56,149 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:04:56,150 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:04:56,151 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:04:56,151 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:04:56,151 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:04:57,794 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:04:57,795 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:04:57,795 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:04:57,796 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:04:57,796 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:04:57,796 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@1521db89
2018-08-17 09:04:57,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:04:57,797 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:04:57,805 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:04:57,806 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:04:57,806 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@1521db89
2018-08-17 09:04:57,806 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:05:12,776 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:05:12,776 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:05:12,777 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:05:12,777 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:12,777 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:05:12,777 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:05:12,778 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:05:12,779 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:05:12,779 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:12,779 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:05:12,780 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:05:20,643 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/user/query
2018-08-17 09:05:20,643 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:05:20,643 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:05:20,644 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:20,644 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:05:20,644 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:05:20,645 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:05:20,645 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:05:20,646 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:20,646 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:05:20,646 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:05:28,209 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:05:28,210 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:05:28,214 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:05:28,214 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:05:28,214 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:05:28,214 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:28,214 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:05:28,215 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:05:28,215 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:05:28,216 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:05:28,216 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:05:28,216 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:05:28,216 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:05:29,720 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:05:29,720 INFO (HttpAspect.java:46)- url=http://192.168.137.48:8080/upload/picture
2018-08-17 09:05:29,721 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:05:29,721 INFO (HttpAspect.java:50)- id=192.168.137.48
2018-08-17 09:05:29,721 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:05:29,721 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@47a8f84c
2018-08-17 09:05:29,721 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:05:29,722 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:05:29,730 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:05:29,730 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:05:29,730 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@47a8f84c
2018-08-17 09:05:29,731 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:10:02,891 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:10:02,891 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:10:02,891 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:10:02,892 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:10:02,892 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:10:02,892 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:10:02,893 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:10:02,894 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:10:02,895 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:10:02,895 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:10:02,895 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:10:15,708 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:10:15,709 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:10:15,709 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:10:15,710 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:10:15,710 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:10:15,711 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:10:15,712 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:10:15,714 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:10:15,715 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:10:15,715 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:10:15,716 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:18:15,157 INFO (HttpAspect.java:46)- url=http://172.20.10.2:8080/user/query
2018-08-17 09:18:15,158 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:18:15,158 INFO (HttpAspect.java:50)- id=172.20.10.2
2018-08-17 09:18:15,159 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:18:15,160 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:18:15,161 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:18:15,162 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:18:15,163 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:18:15,164 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:18:15,164 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:18:15,164 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:21:57,688 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:21:57,688 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:21:57,688 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:21:57,688 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:21:57,689 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:21:57,690 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:21:57,690 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:21:57,691 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:21:57,692 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:21:57,692 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:21:57,692 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:24:02,233 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:24:02,234 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:24:02,234 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:24:02,234 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:02,234 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:24:02,236 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:24:02,236 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:24:02,237 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:24:02,238 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:02,238 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:24:02,238 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:24:19,385 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:24:19,386 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:24:19,387 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:24:19,387 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:19,388 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:24:19,389 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:24:19,390 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:24:19,392 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:24:19,393 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:19,393 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:24:19,394 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:24:36,211 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:24:36,212 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:24:36,219 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:24:36,220 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:24:36,220 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:24:36,220 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:36,220 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:24:36,220 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:24:36,221 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:24:36,222 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:24:36,222 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:24:36,222 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:24:36,222 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"175","id":"008","sex":"woman","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:24:38,249 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:24:38,250 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:24:38,250 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:24:38,250 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:24:38,250 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:24:38,251 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@7607475b
2018-08-17 09:24:38,251 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:24:38,252 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: woman(String), 175(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:24:38,261 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:24:38,262 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:24:38,263 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@7607475b
2018-08-17 09:24:38,263 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:28:03,033 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:28:03,034 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:28:03,035 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:28:03,035 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:28:03,035 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:28:03,042 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:28:03,043 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:28:03,044 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:28:03,045 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:28:03,045 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:28:03,045 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:29:51,998 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:29:51,999 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:29:51,999 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:29:52,000 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:29:52,001 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:29:52,002 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:29:52,003 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:29:52,004 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:29:52,005 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:29:52,006 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:29:52,006 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:30:00,378 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/create
2018-08-17 09:30:00,379 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:30:00,380 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:30:00,380 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 09:30:00,381 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@3d3d8463
2018-08-17 09:30:00,382 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 09:30:00,383 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), man(String), (String), (String)
2018-08-17 09:30:00,393 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:30:00,394 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,createUser
2018-08-17 09:30:00,395 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@3d3d8463
2018-08-17 09:30:00,395 INFO (HttpAspect.java:84)- 返回结果response={"data":"008","resultCode":"000","resultMsg":"success"}
2018-08-17 09:30:00,398 INFO (RedisClient.java:24)- 缓存录入key=user:008,value={"height":"","id":"008","sex":"man","weight":""}
2018-08-17 09:30:05,514 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:30:05,515 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:30:05,536 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:30:05,536 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:30:05,537 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:30:05,538 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:30:05,538 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:30:05,539 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:30:05,540 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:30:05,542 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:30:05,543 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:30:05,543 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:30:05,544 INFO (HttpAspect.java:84)- 返回结果response={"data":{"height":"","id":"008","sex":"man","weight":""},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:30:07,500 INFO (RedisClient.java:35)- 缓存查询结果key=苹果型,value="下肢纤细修长、腰腹稍显突出，是较容易减肥的体型。建议塑形腰部和臀部"
2018-08-17 09:30:07,501 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:30:07,501 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:30:07,501 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:30:07,502 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:30:07,502 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@75918c7c
2018-08-17 09:30:07,503 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:30:07,503 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: man(String), (String), (String), 苹果型(String), 下肢纤细修长、腰腹稍显突出，是较容易减肥的体型(String), 建议塑形腰部和臀部(String), 008(String)
2018-08-17 09:30:07,513 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:30:07,514 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:30:07,514 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@75918c7c
2018-08-17 09:30:07,514 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:30:48,707 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:30:48,708 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:30:48,709 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:30:48,710 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:30:48,710 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:30:48,711 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:30:48,711 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:30:48,712 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:30:48,714 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:30:48,714 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:30:48,714 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:31:05,499 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:31:05,500 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:31:05,501 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:31:05,501 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:31:05,502 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:31:05,503 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:31:05,504 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:31:05,505 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:31:05,507 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:31:05,507 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:31:05,508 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:40:24,002 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:40:24,003 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:40:24,004 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:40:24,004 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:40:24,005 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:40:24,006 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:40:24,008 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:40:24,009 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:40:24,010 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:40:24,011 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:40:24,011 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:48:43,515 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:48:43,517 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:48:43,518 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:48:43,518 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:43,519 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:48:43,521 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:48:43,522 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:48:43,523 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:48:43,525 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:43,525 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:48:43,526 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:48:47,667 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/query
2018-08-17 09:48:47,668 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:48:47,668 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:48:47,668 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:47,669 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:48:47,669 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:48:47,670 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:48:47,671 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-08-17 09:48:47,672 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:47,672 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:48:47,672 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"-102","resultMsg":"查询结果为空"}
2018-08-17 09:48:49,446 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/create
2018-08-17 09:48:49,447 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:48:49,447 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:48:49,447 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 09:48:49,448 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@1f9cb954
2018-08-17 09:48:49,448 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 09:48:49,448 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), man(String), 178(String), 60(String)
2018-08-17 09:48:49,457 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:48:49,458 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,createUser
2018-08-17 09:48:49,458 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@1f9cb954
2018-08-17 09:48:49,458 INFO (HttpAspect.java:84)- 返回结果response={"data":"008","resultCode":"000","resultMsg":"success"}
2018-08-17 09:48:49,459 INFO (RedisClient.java:24)- 缓存录入key=user:008,value={"height":"178","id":"008","sex":"man","weight":"60"}
2018-08-17 09:48:53,564 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:48:53,565 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:48:53,575 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:48:53,576 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:48:53,576 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:48:53,577 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:53,577 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:48:53,578 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:48:53,579 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:48:53,581 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:48:53,582 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:48:53,583 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:48:53,583 INFO (HttpAspect.java:84)- 返回结果response={"data":{"height":"178","id":"008","sex":"man","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:48:54,565 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/create
2018-08-17 09:48:54,566 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:48:54,566 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:48:54,567 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 09:48:54,567 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@94cf4dc
2018-08-17 09:48:54,567 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 09:48:54,568 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), man(String), (String), (String)
2018-08-17 09:48:54,705 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
### The error may involve com.example.demo1.domain.TUserMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into t_user (id, sex, height,        weight)     values (?, ?, ?,        ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
; SQL []; Duplicate entry '008' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy80.insert(Unknown Source)
	at com.example.demo1.service.UserService.createUser(UserService.java:37)
	at com.example.demo1.service.UserService$$FastClassBySpringCGLIB$$66e956a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at com.example.demo1.model.HttpAspect.doAround(HttpAspect.java:67)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at com.example.demo1.service.UserService$$EnhancerBySpringCGLIB$$a3becd36.createUser(<generated>)
	at com.example.demo1.controller.UserController.createUser(UserController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy89.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy87.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 82 common frames omitted
2018-08-17 09:48:55,647 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:48:55,648 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:48:55,648 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:48:55,649 INFO (HttpAspect.java:50)- id=192.168.43.1
2018-08-17 09:48:55,649 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:48:55,650 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@404b2a72
2018-08-17 09:48:55,650 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:48:55,651 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: man(String), 178(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:48:55,660 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:48:55,660 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:48:55,661 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@404b2a72
2018-08-17 09:48:55,661 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:49:00,094 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/user/create
2018-08-17 09:49:00,095 INFO (HttpAspect.java:48)- method=GET
2018-08-17 09:49:00,095 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:49:00,095 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 09:49:00,095 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@6638d1c0
2018-08-17 09:49:00,096 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 09:49:00,097 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String), man(String), (String), (String)
2018-08-17 09:49:00,099 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
### The error may involve com.example.demo1.domain.TUserMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into t_user (id, sex, height,        weight)     values (?, ?, ?,        ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
; SQL []; Duplicate entry '008' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy80.insert(Unknown Source)
	at com.example.demo1.service.UserService.createUser(UserService.java:37)
	at com.example.demo1.service.UserService$$FastClassBySpringCGLIB$$66e956a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at com.example.demo1.model.HttpAspect.doAround(HttpAspect.java:67)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at com.example.demo1.service.UserService$$EnhancerBySpringCGLIB$$a3becd36.createUser(<generated>)
	at com.example.demo1.controller.UserController.createUser(UserController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '008' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy89.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy87.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 82 common frames omitted
2018-08-17 09:49:07,268 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:49:07,269 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:49:07,282 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:49:07,282 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:49:07,282 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:49:07,283 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:49:07,283 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:49:07,283 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:49:07,283 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:49:07,284 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:49:07,285 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:49:07,285 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:49:07,285 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"178","id":"008","sex":"man","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:49:09,104 INFO (RedisClient.java:35)- 缓存查询结果key=苹果型,value="下肢纤细修长、腰腹稍显突出，是较容易减肥的体型。建议塑形腰部和臀部"
2018-08-17 09:49:09,105 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:49:09,106 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:49:09,106 INFO (HttpAspect.java:50)- id=192.168.43.25
2018-08-17 09:49:09,107 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:49:09,107 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@1e6acf40
2018-08-17 09:49:09,107 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:49:09,108 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: man(String), 178(String), 60(String), 苹果型(String), 下肢纤细修长、腰腹稍显突出，是较容易减肥的体型(String), 建议塑形腰部和臀部(String), 008(String)
2018-08-17 09:49:09,117 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:49:09,118 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:49:09,119 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@1e6acf40
2018-08-17 09:49:09,119 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 09:49:10,805 DEBUG (FileUploadController.java:57)- path=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/
2018-08-17 09:49:10,806 DEBUG (FileUploadController.java:69)- destPath=/C:/Users/Xing/eclipse-workspace/demo-3/target/classes/userImg/008.jpg
2018-08-17 09:49:10,810 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:49:10,810 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:49:10,810 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:49:10,810 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:49:10,811 INFO (HttpAspect.java:54)- args=008
2018-08-17 09:49:10,811 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 09:49:10,812 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 09:49:10,813 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 09:49:10,814 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 09:49:10,814 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 09:49:10,814 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部和臀部","bodydesc":"下肢纤细修长、腰腹稍显突出，是较容易减肥的体型","bodytype":"苹果型","height":"178","id":"008","sex":"man","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 09:49:12,639 INFO (RedisClient.java:35)- 缓存查询结果key=香蕉型,value="胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化。建议塑形腰部"
2018-08-17 09:49:12,640 INFO (HttpAspect.java:46)- url=http://192.168.43.229:8080/upload/picture
2018-08-17 09:49:12,641 INFO (HttpAspect.java:48)- method=POST
2018-08-17 09:49:12,641 INFO (HttpAspect.java:50)- id=192.168.43.229
2018-08-17 09:49:12,641 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:49:12,641 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@6690b783
2018-08-17 09:49:12,642 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update t_user set sex = ?, height = ?, weight = ?, bodyType = ?, bodyDesc = ?, advise = ? where id = ? 
2018-08-17 09:49:12,643 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: man(String), 178(String), 60(String), 香蕉型(String), 胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化(String), 建议塑形腰部(String), 008(String)
2018-08-17 09:49:12,651 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-08-17 09:49:12,652 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,updateUserById
2018-08-17 09:49:12,652 INFO (HttpAspect.java:81)- 请求参数=com.example.demo1.domain.TUser@6690b783
2018-08-17 09:49:12,653 INFO (HttpAspect.java:84)- 返回结果response={"resultCode":"000","resultMsg":"success"}
2018-08-17 17:09:51,282 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 17708 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:09:51,284 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:09:51,285 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:09:55,321 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.392 seconds (JVM running for 4.981)
2018-08-17 17:11:18,112 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 14796 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:11:18,125 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:11:18,125 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:11:22,436 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.667 seconds (JVM running for 5.231)
2018-08-17 17:15:32,282 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 5140 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:15:32,284 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:15:32,285 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:15:36,754 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.836 seconds (JVM running for 5.399)
2018-08-17 17:20:24,610 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 4056 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:20:24,612 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:20:24,613 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:20:28,706 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.434 seconds (JVM running for 4.99)
2018-08-17 17:21:16,956 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 17632 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:21:16,960 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:21:16,960 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:21:23,089 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 6.581 seconds (JVM running for 8.123)
2018-08-17 17:22:23,345 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 17608 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:22:23,347 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:22:23,347 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:22:26,419 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 3.303 seconds (JVM running for 4.02)
2018-08-17 17:23:29,554 INFO (HttpAspect.java:46)- url=http://localhost:8080/user/query
2018-08-17 17:23:29,555 INFO (HttpAspect.java:48)- method=GET
2018-08-17 17:23:29,555 INFO (HttpAspect.java:50)- id=0:0:0:0:0:0:0:1
2018-08-17 17:23:29,557 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 17:23:29,558 INFO (HttpAspect.java:54)- args=008
2018-08-17 17:23:29,757 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 17:23:29,771 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 17:23:29,785 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 17:23:29,786 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 17:23:29,787 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 17:23:29,842 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"178","id":"008","sex":"man","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 17:23:39,174 INFO (HttpAspect.java:46)- url=http://localhost:8080/user/query
2018-08-17 17:23:39,175 INFO (HttpAspect.java:48)- method=GET
2018-08-17 17:23:39,175 INFO (HttpAspect.java:50)- id=0:0:0:0:0:0:0:1
2018-08-17 17:23:39,175 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,queryUserById
2018-08-17 17:23:39,175 INFO (HttpAspect.java:54)- args=008
2018-08-17 17:23:39,176 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, sex, height, weight, bodyType, bodyDesc, advise from t_user where id = ? 
2018-08-17 17:23:39,176 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 008(String)
2018-08-17 17:23:39,178 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-08-17 17:23:39,178 INFO (HttpAspect.java:79)- 调用方法=com.example.demo1.service.UserService,queryUserById
2018-08-17 17:23:39,178 INFO (HttpAspect.java:81)- 请求参数=008
2018-08-17 17:23:39,179 INFO (HttpAspect.java:84)- 返回结果response={"data":{"advise":"建议塑形腰部","bodydesc":"胸部、腰部、臀部尺寸相近，整体并不胖，但缺乏曲线变化","bodytype":"香蕉型","height":"178","id":"008","sex":"man","weight":"60"},"resultCode":"000","resultMsg":"success"}
2018-08-17 17:24:55,886 INFO (HttpAspect.java:46)- url=http://localhost:8080/user/create
2018-08-17 17:24:55,887 INFO (HttpAspect.java:48)- method=GET
2018-08-17 17:24:55,887 INFO (HttpAspect.java:50)- id=0:0:0:0:0:0:0:1
2018-08-17 17:24:55,887 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 17:24:55,887 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@41da73dc
2018-08-17 17:24:55,892 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 17:24:55,894 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 001(String), null, null, null
2018-08-17 17:24:55,940 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
### The error may involve com.example.demo1.domain.TUserMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into t_user (id, sex, height,        weight)     values (?, ?, ?,        ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
; SQL []; Duplicate entry '001' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at com.example.demo1.service.UserService.createUser(UserService.java:37)
	at com.example.demo1.service.UserService$$FastClassBySpringCGLIB$$66e956a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at com.example.demo1.model.HttpAspect.doAround(HttpAspect.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at com.example.demo1.service.UserService$$EnhancerBySpringCGLIB$$b6700c.createUser(<generated>)
	at com.example.demo1.controller.UserController.createUser(UserController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy90.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy88.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 83 common frames omitted
2018-08-17 17:25:12,196 INFO (HttpAspect.java:46)- url=http://localhost:8080/user/create
2018-08-17 17:25:12,197 INFO (HttpAspect.java:48)- method=GET
2018-08-17 17:25:12,197 INFO (HttpAspect.java:50)- id=0:0:0:0:0:0:0:1
2018-08-17 17:25:12,197 INFO (HttpAspect.java:52)- class_method=com.example.demo1.service.UserService,createUser
2018-08-17 17:25:12,197 INFO (HttpAspect.java:54)- args=com.example.demo1.domain.TUser@62b1c7b0
2018-08-17 17:25:12,197 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into t_user (id, sex, height, weight) values (?, ?, ?, ?) 
2018-08-17 17:25:12,198 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 001(String), null, null, null
2018-08-17 17:25:12,200 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
### The error may involve com.example.demo1.domain.TUserMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into t_user (id, sex, height,        weight)     values (?, ?, ?,        ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
; SQL []; Duplicate entry '001' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at com.example.demo1.service.UserService.createUser(UserService.java:37)
	at com.example.demo1.service.UserService$$FastClassBySpringCGLIB$$66e956a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at com.example.demo1.model.HttpAspect.doAround(HttpAspect.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at com.example.demo1.service.UserService$$EnhancerBySpringCGLIB$$b6700c.createUser(<generated>)
	at com.example.demo1.controller.UserController.createUser(UserController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '001' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy90.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy88.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 83 common frames omitted
2018-08-17 17:25:20,574 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 3540 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:25:20,577 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:25:20,577 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:25:24,705 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.447 seconds (JVM running for 5.048)
2018-08-17 17:25:27,015 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.demo1.model.BaseResult<java.lang.String> com.example.demo1.controller.UserController.createUser(java.util.Map)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:154)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:25:58,121 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.demo1.model.BaseResult<java.lang.String> com.example.demo1.controller.UserController.createUser(java.util.Map)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:154)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:26:10,912 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.demo1.model.BaseResult<java.lang.String> com.example.demo1.controller.UserController.createUser(java.util.Map)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:154)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:26:44,965 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 4428 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:26:44,967 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:26:44,967 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:26:48,060 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 3.319 seconds (JVM running for 4.035)
2018-08-17 17:26:51,080 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.demo1.model.BaseResult<java.lang.String> com.example.demo1.controller.UserController.createUser(java.util.Map)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:154)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:27:41,443 ERROR (ExceptionHandle.java:31)- 系统异常{}
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.demo1.model.BaseResult<java.lang.String> com.example.demo1.controller.UserController.createUser(java.util.Map)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:154)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:28:39,542 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 7684 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:28:39,544 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:28:39,545 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:28:45,252 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 6.052 seconds (JVM running for 6.637)
2018-08-17 17:29:53,425 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 11336 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:29:53,429 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:29:53,429 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:29:57,271 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.108 seconds (JVM running for 4.944)
2018-08-17 17:29:59,067 ERROR (ExceptionHandle.java:31)- 系统异常{}
java.lang.NullPointerException: null
	at com.example.demo1.controller.UserController.createUser(UserController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:30:37,180 ERROR (ExceptionHandle.java:31)- 系统异常{}
java.lang.NullPointerException: null
	at com.example.demo1.controller.UserController.createUser(UserController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:30:40,658 ERROR (ExceptionHandle.java:31)- 系统异常{}
java.lang.NullPointerException: null
	at com.example.demo1.controller.UserController.createUser(UserController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-08-17 17:35:54,626 INFO (StartupInfoLogger.java:48)- Starting Demo1Application on GAOZHIXING with PID 16172 (C:\Users\Xing\eclipse-workspace\demo-3\target\classes started by Xing in C:\Users\Xing\eclipse-workspace\demo-3)
2018-08-17 17:35:54,641 DEBUG (StartupInfoLogger.java:51)- Running with Spring Boot v1.5.13.RELEASE, Spring v4.3.17.RELEASE
2018-08-17 17:35:54,641 INFO (SpringApplication.java:593)- No active profile set, falling back to default profiles: default
2018-08-17 17:35:58,723 INFO (StartupInfoLogger.java:57)- Started Demo1Application in 4.438 seconds (JVM running for 5.022)
